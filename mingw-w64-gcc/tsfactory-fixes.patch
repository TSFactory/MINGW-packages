diff -pNaur gcc-5.2.0.orig/gcc/cp/cfns.gperf gcc-5.2.0/gcc/cp/cfns.gperf
--- gcc-5.2.0.orig/gcc/cp/cfns.gperf	2015-01-05 12:33:28.000000000 +0000
+++ gcc-5.2.0/gcc/cp/cfns.gperf	2017-12-29 09:49:29.696541000 +0000
@@ -1,3 +1,5 @@
+%language=C++
+%define class-name libc_name
 %{
 /* Copyright (C) 2000-2015 Free Software Foundation, Inc.

@@ -16,14 +18,6 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with GCC; see the file COPYING3.  If not see
 <http://www.gnu.org/licenses/>.  */
-#ifdef __GNUC__
-__inline
-#endif
-static unsigned int hash (const char *, unsigned int);
-#ifdef __GNUC__
-__inline
-#endif
-const char * libc_name_p (const char *, unsigned int);
 %}
 %%
 # The standard C library functions, for feeding to gperf; the result is used
diff -pNaur gcc-5.2.0.orig/gcc/cp/cfns.h gcc-5.2.0/gcc/cp/cfns.h
--- gcc-5.2.0.orig/gcc/cp/cfns.h	2015-01-05 12:33:28.000000000 +0000
+++ gcc-5.2.0/gcc/cp/cfns.h	2017-12-29 09:52:09.242246300 +0000
@@ -1,5 +1,5 @@
-/* ANSI-C code produced by gperf version 3.0.3 */
-/* Command-line: gperf -o -C -E -k '1-6,$' -j1 -D -N libc_name_p -L ANSI-C cfns.gperf  */
+/* C++ code produced by gperf version 3.0.4 */
+ /* Command-line: gperf -o -C -E -k '1-6,$' -j1 -D -N libc_name_p -L C++ --output-file cfns.h cfns.gperf  */

 #if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
       && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
@@ -28,7 +28,7 @@
 #error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
 #endif

-#line 1 "cfns.gperf"
+#line 3 "cfns.gperf"

 /* Copyright (C) 2000-2015 Free Software Foundation, Inc.

@@ -47,25 +47,18 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with GCC; see the file COPYING3.  If not see
 <http://www.gnu.org/licenses/>.  */
-#ifdef __GNUC__
-__inline
-#endif
-static unsigned int hash (const char *, unsigned int);
-#ifdef __GNUC__
-__inline
-#endif
-const char * libc_name_p (const char *, unsigned int);
 /* maximum key range = 391, duplicates = 0 */

-#ifdef __GNUC__
-__inline
-#else
-#ifdef __cplusplus
-inline
-#endif
-#endif
-static unsigned int
-hash (register const char *str, register unsigned int len)
+class libc_name
+{
+private:
+  static inline unsigned int hash (const char *str, unsigned int len);
+public:
+  static const char *libc_name_p (const char *str, unsigned int len);
+};
+
+inline unsigned int
+libc_name::hash (register const char *str, register unsigned int len)
 {
   static const unsigned short asso_values[] =
     {
@@ -122,14 +115,8 @@ hash (register const char *str, register
   return hval + asso_values[(unsigned char)str[len - 1]];
 }

-#ifdef __GNUC__
-__inline
-#ifdef __GNUC_STDC_INLINE__
-__attribute__ ((__gnu_inline__))
-#endif
-#endif
 const char *
-libc_name_p (register const char *str, register unsigned int len)
+libc_name::libc_name_p (register const char *str, register unsigned int len)
 {
   enum
     {
diff -pNaur gcc-5.2.0.orig/gcc/cp/except.c gcc-5.2.0/gcc/cp/except.c
--- gcc-5.2.0.orig/gcc/cp/except.c	2015-02-12 15:38:33.000000000 +0000
+++ gcc-5.2.0/gcc/cp/except.c	2017-12-29 09:52:50.418654000 +0000
@@ -1040,7 +1040,7 @@ nothrow_libfn_p (const_tree fn)
      unless the system headers are playing rename tricks, and if
      they are, we don't want to be confused by them.  */
   id = DECL_NAME (fn);
-  return !!libc_name_p (IDENTIFIER_POINTER (id), IDENTIFIER_LENGTH (id));
+  return !!libc_name::libc_name_p (IDENTIFIER_POINTER (id), IDENTIFIER_LENGTH (id));
 }

 /* Returns nonzero if an exception of type FROM will be caught by a
diff -pNaur gcc-5.2.0.orig/gcc/cp/Make-lang.in gcc-5.2.0/gcc/cp/Make-lang.in
--- gcc-5.2.0.orig/gcc/cp/Make-lang.in	2015-01-15 22:58:42.000000000 +0000
+++ gcc-5.2.0/gcc/cp/Make-lang.in	2017-12-29 09:48:08.187272900 +0000
@@ -111,7 +111,7 @@ else
 # deleting the $(srcdir)/cp/cfns.h file.
 $(srcdir)/cp/cfns.h:
 endif
-	gperf -o -C -E -k '1-6,$$' -j1 -D -N 'libc_name_p' -L ANSI-C \
+	gperf -o -C -E -k '1-6,$$' -j1 -D -N 'libc_name_p' -L C++ \
 		$(srcdir)/cp/cfns.gperf --output-file $(srcdir)/cp/cfns.h

 #
diff -pNaur gcc-5.2.0.orig/gcc/gcc.c gcc-5.2.0/gcc/gcc.c
--- gcc-5.2.0.orig/gcc/gcc.c	2015-03-10 09:37:41.000000000 +0000
+++ gcc-5.2.0/gcc/gcc.c	2017-12-29 11:37:48.309205100 +0000
@@ -3716,7 +3716,9 @@ driver_handle_option (struct gcc_options
     case OPT_L:
       /* Similarly, canonicalize -L for linkers that may not accept
 	 separate arguments.  */
-      save_switch (concat ("-L", arg, NULL), 0, NULL, validated, true);
+      add_infile (concat ("-L", arg, NULL), "*");
+      do_save = false;
+      // save_switch (concat ("-L", arg, NULL), 0, NULL, validated, true);
       return true;

     case OPT_F:
@@ -5479,12 +5481,26 @@ do_spec_1 (const char *spec, int inswitc
 	      return value;
 	    break;

-	  case 'l':
-	    value = do_spec_1 (link_spec, 0, NULL);
-	    if (value != 0)
-	      return value;
-	    break;
+	  case 'l': {
+        char **argv;
+        int j;
+        argv = (char **) alloca (sizeof (char*) * (n_infiles + 1));
+
+        for (i = 0, j = 0; i < n_infiles; i++) {
+          if (infiles[i].language && *(infiles[i].language) == '*') {
+            argv[j] = CONST_CAST (char *, infiles[i].name);
+            infiles[i].compiled = true;
+            j++;
+          }
+        }
+        argv[j] = NULL;
+        create_at_file(argv);

+	      value = do_spec_1 (link_spec, 0, NULL);
+	      if (value != 0)
+	        return value;
+	      break;
+      }
 	  case 'L':
 	    value = do_spec_1 (lib_spec, 0, NULL);
 	    if (value != 0)
